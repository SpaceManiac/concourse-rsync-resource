#!/usr/bin/env bash
set -euo pipefail

dest_dir=$1

script_input='/tmp/input'
cat > $script_input <&0 # STDIN params

server=$(jq -r '(.source.servers + [.source.server])[0]' < $script_input)
port=$(jq -r '.source.port // ""' < $script_input)
user=$(jq -r '.source.user // ""' < $script_input)
base_dir=$(jq -r '.source.base_dir // ""' < $script_input)
version=$(jq -r '.version.ref // ""' < $script_input)

if test -z "$version"; then
  printf 'ERROR: No .version.ref was supplied.' >&2
  exit 1
fi

# Default to port 22.
port=${port:-22}
printf -v rsh '%q ' ssh -i ~/.ssh/server_key -p "$port"

# Combine base dir and selected version.
if jq -re '.source.disable_version_path' < $script_input >/dev/null; then
  src_dir=$base_dir
else
  src_dir=$base_dir/$version
fi

# Print configuration results.
printf '%s=%s\n' \
  server "$server" \
  port "$port" \
  user "$user" \
  base_dir "$base_dir" \
  version "$version" \
  src_dir "$src_dir" \
  dest_dir "$dest_dir" \
  >&2

# Configure SSH.
mkdir -p ~/.ssh
(jq -r '.source.private_key // empty' < $script_input) > ~/.ssh/server_key
printf "Host %s\n\tStrictHostKeyChecking no\n" "$server" > ~/.ssh/config
chmod -R 600 ~/.ssh
eval "$(ssh-agent)" >/dev/null
SSH_ASKPASS=/opt/resource/askpass.sh DISPLAY='' ssh-add ~/.ssh/server_key >/dev/null

# Perform the download.
(
  set -x
  rsync --verbose --archive --rsh "$rsh" "$user@$server:$src_dir/" "$dest_dir/" >&2
)
jq -n '{version: {ref: $ARGS.positional[0]}}' --args "$version"
