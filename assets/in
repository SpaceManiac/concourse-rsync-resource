#!/usr/bin/env bash
set -euo pipefail

DEST_DIR=$1

SCRIPT_INPUT='/tmp/input'
cat > $SCRIPT_INPUT <&0 # STDIN params

SERVER=$(jq -r '(.source.servers + [.source.server])[0]' < $SCRIPT_INPUT)
PORT=$(jq -r '.source.port // ""' < $SCRIPT_INPUT)
USER=$(jq -r '.source.user // ""' < $SCRIPT_INPUT)
BASE_DIR=$(jq -r '.source.base_dir // ""' < $SCRIPT_INPUT)
VERSION=$(jq -r '.version.ref // ""' < $SCRIPT_INPUT)

if test -z "$VERSION"; then
  printf 'ERROR: No .version.ref was supplied.' >&2
  exit 1
fi

# Default to port 22.
PORT=${PORT:-22}

# Combine base dir and selected version.
if jq -re '.source.disable_version_path' < $SCRIPT_INPUT >/dev/null; then
  SRC_DIR=$BASE_DIR
else
  SRC_DIR=$BASE_DIR/$VERSION
fi

# Print configuration results.
printf '%s=%s\n' \
  SERVER "$SERVER" \
  PORT "$PORT" \
  USER "$USER" \
  BASE_DIR "$BASE_DIR" \
  VERSION "$VERSION" \
  SRC_DIR "$SRC_DIR" \
  DEST_DIR "$DEST_DIR" \
  >&2

# Configure SSH.
mkdir -p ~/.ssh
(jq -r '.source.private_key // empty' < $SCRIPT_INPUT) > ~/.ssh/server_key
printf "Host %s\n\tStrictHostKeyChecking no\n" "$SERVER" > ~/.ssh/config
chmod -R 600 ~/.ssh
eval "$(ssh-agent)" >/dev/null
SSH_ASKPASS=/opt/resource/askpass.sh DISPLAY='' ssh-add ~/.ssh/server_key >/dev/null

# Perform the download.
(
  set -x
  rsync --partial --progress --archive --rsh "ssh -i ~/.ssh/server_key -p ${PORT@Q}" "$USER@$SERVER:$SRC_DIR/" "$DEST_DIR/" >&2
)
jq -n '{version: {ref: $ARGS.positional[0]}}' --args "$VERSION"
