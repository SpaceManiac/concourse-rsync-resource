#!/usr/bin/env bash
set -euo pipefail

SCRIPT_INPUT='/tmp/input'
cat > $SCRIPT_INPUT <&0 # STDIN params

SERVER=$(jq -r '(.source.servers + [.source.server])[0]' < $SCRIPT_INPUT)
PORT=$(jq -r '.source.port // ""' < $SCRIPT_INPUT)
BASE_DIR=$(jq -r '.source.base_dir // ""' < $SCRIPT_INPUT)
USER=$(jq -r '.source.user // ""' < $SCRIPT_INPUT)
VERSION=$(jq -r '.version.ref // ""' < $SCRIPT_INPUT)

# Default to port 22.
PORT=${PORT:-22}

# Print configuration results.
printf '%s=%s\n' \
  SERVER "$SERVER" \
  PORT "$PORT" \
  BASE_DIR "$BASE_DIR" \
  USER "$USER" \
  VERSION "$VERSION" \
  >&2

# Configure SSH.
mkdir -p ~/.ssh
(jq -r '.source.private_key // empty' < $SCRIPT_INPUT) > ~/.ssh/server_key
printf "Host %s\n\tStrictHostKeyChecking no\n" "$SERVER" > ~/.ssh/config
chmod -R 600 ~/.ssh
eval "$(ssh-agent)" >/dev/null
SSH_ASKPASS=/opt/resource/askpass.sh DISPLAY='' ssh-add ~/.ssh/server_key >/dev/null

# Perform the directory listing.
VERSIONS=()
if jq -re '.source.disable_version_path' < $SCRIPT_INPUT >/dev/null; then
  # Adding an extra / here asserts that it's a directory. rsync will error if not.
  if rsync --list-only --rsh "ssh -i ~/.ssh/server_key -p ${PORT@Q}" "$USER@$SERVER:$BASE_DIR/" >&2; then
    DIR=${BASE_DIR##*/}
    printf 'taking base directory as sole version: %s' "$DIR" >&2
    VERSIONS+=("$DIR")
  fi
else
  # List directory, skip first line (entry for `.`), sort from oldest to newest,
  # cut to filenames only, then read into VERSIONS.
  # Lines look like: drwxrwxr-x          4,096 2024/11/01 01:23:45 filename
  # NOTE: handles spaces and printable characters fine, but chokes on
  # backslashes or nonprintable characters that get octal-escaped like `\#000`.
  readarray -t VERSIONS < <(
    rsync --list-only --rsh "ssh -i ~/.ssh/server_key -p ${PORT@Q}" "$USER@$SERVER:$BASE_DIR/" \
    | tee >(cat >&2) \
    | { read -r; cat; } \
    | sort -k 3,4 \
    | cut -b 47-
  )
fi
jq -n '$ARGS.positional | [{ref: .[]}]' --args "${VERSIONS[@]}"
